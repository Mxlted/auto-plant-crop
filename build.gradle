plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'   // must be a literal here
    id 'maven-publish'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        // vendor = JvmVendorSpec.ADOPTIUM // optional
    }
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url = 'https://maven.fabricmc.net/' }
    mavenCentral()
    gradlePluginPortal()
}

loom {
    runs {
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${project.archives_base_name}"
            runDir "build/datagen"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += ['src/main/generated']
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 21
}

java { withSourcesJar() }

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories { /* add targets if you publish */ }
}